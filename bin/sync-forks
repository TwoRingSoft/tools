#! /usr/bin/env ruby

require 'github_api'
require 'json'
require 'optparse'
require_relative '../lib/echoexec'

options = {}
parser = OptionParser.new do |opts|
  opts.banner = <<~BANNER
  
    Usage: sync-forks [options] <directory>
           
           <directory> is the path containing the directories holding your forks, and/or
           to where those you don't yet have should be cloned.
           
           Examples:
    
           sync-forks -u/--username <user> -p/--password <pass> [-o/--one-time-pw <otp>] .
           sync-forks -u/--username <user> -t/--token <token> .
           sync-forks -u/--username <user> -t/--token -n/--repo-name that-one-repo-I-forked <token> .
           
           If you already have a Personal Access Token, provide it in the second form. 
           Otherwise, use the first form, which will register a new token for you named
           “sync-forks”. Then use that to invoke the program again. This is because
           requests using basic authentication (user/pass) are too rate limited.
           
           Options:
           
  BANNER

  opts.on('-uUSERNAME', '--username=USERNAME', 'GitHub username. Required for all invocations.') do |user| options[:username] = user end
  opts.on('-tTOKEN', '--token=TOKEN', 'GitHub personal access token. The primary way to use this program.') do |t| options[:token] = t end
  opts.on('-pPASSWORD', '--password=PASSWORD', 'GitHub password.') do |pass| options[:password] = pass end
  opts.on('-oOTP', '--one-time-pw=OTP', 'GitHub 2FA token, if you have it enabled.') do |otp| options[:otp] = otp end
  opts.on('-rREPO', '--repo-name=REPO', 'The name of a particular repository to sync.') do |repo| options[:repo] = repo end
end
parser.parse!

github = nil
if nil != options[:token] && nil != options[:username] then
  github = Github.new oauth_token: options[:token]
elsif nil != options[:username] && nil != options[:password]
  github = Github.new do |config|
     config.basic_auth = "#{options[:username]}:#{options[:password]}"
     if nil != options[:otp] then
       config.connection_options = {headers: {"X-GitHub-OTP" => options[:otp]}}
     end
  end
  token = github.auth.create scopes: ['repo'], note: 'sync-forks3'
  puts "Created new token, use it to call sync-forks again:"
  puts
  puts "\tsync-forks -u #{user} -t #{token.token}"
  puts
  exit
else
  puts "Must provide either a username/token or username/password/otp combination to authenticate."
  puts parser
  exit
end

repos = github.repos.list user: options[:username], auto_pagination: true
forks = repos.select {|x| x.fork}

if options[:repo] != nil then
  forks.select! {|x| x.name == options[:repo]}
end

current_dir = Dir.new(ARGV[0])
Dir.chdir current_dir
forks.each do |forked|
  info = github.repos(user: options[:username], repo: forked.name).get
  fork_url = info.source.ssh_url
  name = forked.name
  url = forked.ssh_url
  
  puts '---'
  if current_dir.entries.include? name then
    puts "#{name} already exists."
  else
    echo_and_exec "git clone #{url}"
    Dir.chdir "#{name}"
    echo_and_exec "git remote add upstream #{fork_url}"
    Dir.chdir ".."
  end
end
