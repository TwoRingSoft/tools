#! /usr/bin/env ruby

require 'optparse'

podspec = ARGV[0]

options = {}
parser = OptionParser.new do |opts|
  opts.banner = <<~BANNER

    Usage: release-podspec [options] <podspec-name>

           Form Git tags and push them to remote, then push the podspec to CocoaPods trunk.

    Options:

  BANNER
  opts.on('-w', '--allow-warnings', 'Pass \'--allow-warnings\' to \'cocoapods spec lint\'.') do |force| options[:allow_warnings] = true end
  opts.on('-v', '--verbose', 'Pass \'--verbose\' to \'cocoapods spec lint\'.') do |name| options[:verbose] = true end
  opts.on('-rREPO', '--repo=REPO', 'By default, release-podspec pushed the podspec to CocoaPods trunk. By supplying this argument, instead of \`pod trunk push\`, \`pod repo push\` is used instead.') do |repo| options[:repo] = repo end
  opts.on('-h', '--help', 'Print this help message.') do 
    puts opts
    exit
  end
end
parser.parse!

version_file = "#{podspec}.podspec"
version = `vrsn --read --file #{version_file}`
`git tag #{podspec}-#{version.strip}`
`git push --tags`

spec_lint_flags = Array.new 
if options[:allow_warnings] != nil then
  spec_lint_flags << '--allow-warnings'
end
if options[:verbose] != nil then
  spec_lint_flags << '--verbose'
end

repo = String.new
if options[:repo] != nil then
	`rbenv exec bundle exec pod repo push #{options[:repo]} #{podspec}.podspec #{spec_lint_flags.join ' '}`
else
	`rbenv exec bundle exec pod trunk push #{podspec}.podspec #{spec_lint_flags.join ' '}`
end

