#! /usr/bin/env ruby

require 'open3'
require 'optparse'
require_relative '../lib/echoexec'

podspec = ARGV[0]

options = {}
parser = OptionParser.new do |opts|
  opts.banner = <<~BANNER

    Usage: release-podspec [options] <podspec-name>

           Form Git tags and push them to remote, then push the podspec to CocoaPods trunk.

    Options:

  BANNER
  opts.on('-w', '--allow-warnings', 'Pass \'--allow-warnings\' to \'cocoapods spec lint\'.') do |force| options[:allow_warnings] = true end
  opts.on('-s', '--skip-tests', 'Pass \'--skip-tests\' to \'cocoapods spec lint\'.') do |skip_tests| options[:skip_tests] = true end
  opts.on('-n', '--podspec-name-in-tag', 'When forming the tag name for a release candidate, prefix the podspecâ€˜s name to the version string. Helps when you have multiple podspecs in a repository and tag versions for each.') do |podspec_name_in_tag| options[:podspec_name_in_tag] = true end
  opts.on('-v', '--verbose', 'Pass \'--verbose\' to \'cocoapods spec lint\'.') do |name| options[:verbose] = true end
  opts.on('-rREPO', '--repo=REPO', 'By default, release-podspec pushes the podspec to CocoaPods trunk. By supplying this argument, instead of \`pod trunk push\`, \`pod repo push\` is used instead.') do |repo| options[:repo] = repo end
  opts.on('-cCHANGELOG_PATH', '--changelog-path=CHANGELOG_PATH', 'By default, release-podspec looks for //CHANGELOG.md. You can specify another location with this option.') do |changelog_path| options[:changelog_path] = changelog_path end
  opts.on('--e', '--changelog-entry=CHANGELOG_ENTRY', 'The name of the changelog entry, if it differs from the tag name.') do |changelog_entry_name_override| options[:changelog_entry_name_override] = changelog_entry_name_override end
  opts.on('-h', '--help', 'Print this help message.') do 
    puts opts
    exit
  end
end
parser.parse!

changelog_path = 'CHANGELOG.md'
if options[:changelog_path] != nil then
  changelog_path = options[:changelog_path]
end
version = `vrsn --read --file #{podspec}.podspec`.strip
name_prefix = String.new
if options[:podspec_name_in_tag] then
  name_prefix = podspec + '-'
end
changelog_entry_name = String.new
if options[:changelog_entry_name_override] != nil then
  changelog_entry_name = "--name " + options[:changelog_entry_name_override]
end
echo_and_exec "rbenv exec bundle exec changetag #{changelog_path} #{name_prefix}#{version} #{changelog_entry_name}"
echo_and_exec 'git push --tags'

spec_lint_flags = Array.new 
if options[:allow_warnings] != nil then
  spec_lint_flags << '--allow-warnings'
end
if options[:verbose] != nil then
  spec_lint_flags << '--verbose'
end
if options[:skip_tests] != nil then
  spec_lint_flags << '--skip-tests'
end

command = String.new
if options[:repo] != nil then
	command = "rbenv exec bundle exec pod repo push #{options[:repo]} #{spec_lint_flags.join ' '}"
else
	command = "rbenv exec bundle exec pod trunk push #{podspec}.podspec #{spec_lint_flags.join ' '}"
end

puts command
stdout, stderr, status = Open3.capture3 command

puts stdout

if status != 0 then
  puts "Podspec push failed:\nstderr: #{stderr}"
  exit 1
else
  puts "Podspec pushed successfully!"
end

