#! /usr/bin/env ruby

require 'optparse'
require_relative '../lib/echoexec'
require_relative '../lib/errors'
require_relative '../lib/git_check'

options = {}
parser = OptionParser.new do |opts|
  opts.banner = <<~BANNER

    Usage: bumpr <component> /path/to/../version.file

           Component types:

           - "major", "minor", "patch" semantic version components
           - "build" numeric build numbers

  BANNER
  opts.on('-n', '--no-commit', 'Leave changes in the git working index instead of committing them.') do |no_commit| options[:no_commit] = true end
  opts.on('-h', '--help', 'Print this help message.') do
    puts opts
    exit
  end
end
parser.parse!

git_check

component = ARGV[0]
version_file = ARGV[1]

# map this scripts argument values (key) to vrsnr's argument values (value)
argument = {
  'major' => 'major',
  'minor' => 'minor',
  'patch' => 'patch',
  'build' => '--numeric'
}[component]

if argument == nil then
  puts 'Unrecognized version component.'
  exit TwoRingToolError::INVALID_SEMVER_COMPONENT
end

command = "vrsn #{argument} --file #{version_file}"
puts command
stdout, stderr, status = Open3.capture3(command)

unless options[:no_commit] then
  echo_and_exec "git add #{version_file}"
  echo_and_exec "git commit --message \"#{stdout}\""
end
